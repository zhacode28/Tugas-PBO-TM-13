/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Persistence;

/**
 *
 * @author zahidahhanumalzahra
 */
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.System.Logger;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.*;
import java.lang.System.Logger.Level;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import java.util.Map;
import java.util.HashMap;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import javax.persistence.PersistenceException;

public class Mahasiswa extends javax.swing.JFrame {

    Connection conn;

    public Mahasiswa() {
        initComponents();
        tampil();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableData = new javax.swing.JTable();
        jButtonTambahData = new javax.swing.JButton();
        jButtonHapusData = new javax.swing.JButton();
        jButtonUpdateData = new javax.swing.JButton();
        jTextFieldSKS = new javax.swing.JTextField();
        jTextFieldKodeMK = new javax.swing.JTextField();
        jTextFieldMataKuliah = new javax.swing.JTextField();
        jLabelKodeMK = new javax.swing.JLabel();
        jLabelSKS = new javax.swing.JLabel();
        jLabelMataKuliah = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelSemesterAjar = new javax.swing.JLabel();
        jTextFieldSemesterAjar = new javax.swing.JTextField();
        jButtonCetak = new javax.swing.JButton();
        jButtonUpload = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableData);

        jButtonTambahData.setText("Tambah");
        jButtonTambahData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahDataActionPerformed(evt);
            }
        });

        jButtonHapusData.setText("Hapus");
        jButtonHapusData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusDataActionPerformed(evt);
            }
        });

        jButtonUpdateData.setText("Update");
        jButtonUpdateData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateDataActionPerformed(evt);
            }
        });

        jLabelKodeMK.setText("Kode Mata Kuliah");

        jLabelSKS.setText("SKS");

        jLabelMataKuliah.setText("Nama Mata Kuliah");

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel4.setText("Mata Kuliah");

        jLabelSemesterAjar.setText("Semester Ajar");

        jTextFieldSemesterAjar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSemesterAjarActionPerformed(evt);
            }
        });

        jButtonCetak.setText("Cetak");
        jButtonCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCetakActionPerformed(evt);
            }
        });

        jButtonUpload.setText("Upload");
        jButtonUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUploadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelKodeMK)
                                    .addComponent(jLabelSKS)
                                    .addComponent(jLabelMataKuliah)
                                    .addComponent(jLabelSemesterAjar))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldSKS, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                    .addComponent(jTextFieldKodeMK)
                                    .addComponent(jTextFieldMataKuliah)
                                    .addComponent(jTextFieldSemesterAjar)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jButtonTambahData)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonUpdateData)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonHapusData)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(99, 99, 99))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jButtonCetak)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonUpload)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelKodeMK)
                            .addComponent(jTextFieldKodeMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelSKS)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelMataKuliah)
                                    .addComponent(jTextFieldMataKuliah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelSemesterAjar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldSemesterAjar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jTextFieldSKS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonTambahData)
                            .addComponent(jButtonUpdateData)
                            .addComponent(jButtonHapusData))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCetak)
                            .addComponent(jButtonUpload))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                        .addGap(70, 70, 70))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void tampil() {
        EntityManager em = Persistence.createEntityManagerFactory("TM_12PU").createEntityManager();

        Query q = em.createNamedQuery("Matakuliah.findAll");
        List<Matakuliah> hasil = q.getResultList();

        DefaultTableModel tbmk = new DefaultTableModel(new String[]{"Kode Mata Kuliah", "Nama Mata Kuliah", "SKS", "Semester"}, 0);

        for (Matakuliah data : hasil) {
            Object[] baris = new Object[4];
            baris[0] = data.getKodemk();
            baris[1] = data.getNamamk();
            baris[2] = data.getSks();
            baris[3] = data.getSemesterajar();
            tbmk.addRow(baris);
        }

        jTableData.setModel(tbmk);

        em.close();
    }

    public void kosong() {
        jTextFieldKodeMK.setText("");
        jTextFieldMataKuliah.setText("");
        jTextFieldSKS.setText("");
        jTextFieldSemesterAjar.setText("");
    }


    private void jButtonHapusDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusDataActionPerformed

        int selectedRow = jTableData.getSelectedRow();

        if (selectedRow != -1) {

            String kodeString = jTableData.getValueAt(selectedRow, 0).toString();

            int kode = Integer.parseInt(kodeString);

            int jawab = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus data?",
                    "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);

            if (jawab == JOptionPane.YES_OPTION) {
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("TM_12PU");
                EntityManager em = emf.createEntityManager();
                em.getTransaction().begin();

                Matakuliah mk = em.find(Matakuliah.class, kode);
                if (mk != null) {
                    em.remove(mk);
                    em.getTransaction().commit();
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
                } else {
                    JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
                }

                em.close();
                emf.close();

                tampil();
            } else {
                JOptionPane.showMessageDialog(this, "Penghapusan dibatalkan");
            }
        }

    }//GEN-LAST:event_jButtonHapusDataActionPerformed

    private void jButtonTambahDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahDataActionPerformed

        if (jTextFieldKodeMK.getText().equals("") || jTextFieldSKS.getText().equals("") || jTextFieldMataKuliah.getText().equals("") || jTextFieldSemesterAjar.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Isi semua data");
        } else {
            String kode, nama;
            kode = jTextFieldKodeMK.getText();
            nama = jTextFieldMataKuliah.getText();
            int sks, semester;

            try {
                sks = Integer.parseInt(jTextFieldSKS.getText());
                semester = Integer.parseInt(jTextFieldSemesterAjar.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "SKS dan Semester harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("TM_12PU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();

            Matakuliah mk = new Matakuliah();
            mk.setKodemk(Integer.parseInt(kode));
            mk.setNamamk(nama);
            mk.setSks(sks);
            mk.setSemesterajar(semester);

            em.persist(mk);

            em.getTransaction().commit();
            JOptionPane.showMessageDialog(null, "Sukses diinput");

            kosong();
            tampil();

            em.close();
            emf.close();
        }
    }//GEN-LAST:event_jButtonTambahDataActionPerformed

    private void jButtonUpdateDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateDataActionPerformed
       
        if (jTextFieldKodeMK.getText().equals("") || jTextFieldMataKuliah.getText().equals("") || jTextFieldSKS.getText().equals("") || jTextFieldSemesterAjar.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Isi semua data");
        } else {
            // Ambil nilai dari form
            String kode = jTextFieldKodeMK.getText();
            String nama = jTextFieldMataKuliah.getText();
            int sks, semester;

            try {
                // Coba parsing nilai SKS dan SemesterAjar ke integer
                sks = Integer.parseInt(jTextFieldSKS.getText());
                semester = Integer.parseInt(jTextFieldSemesterAjar.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "SKS dan Semester harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Buat EntityManager untuk mengakses database
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("TM_12PU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();

            // Cari entitas Matakuliah berdasarkan kode
            Matakuliah mk = em.find(Matakuliah.class, Integer.parseInt(kode));
            if (mk == null) {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
            } else {
                // Update data
                mk.setKodemk(Integer.parseInt(kode));
                mk.setNamamk(nama);
                mk.setSks(sks);
                mk.setSemesterajar(semester);

                em.merge(mk);
                em.getTransaction().commit();

                JOptionPane.showMessageDialog(null, "Data berhasil diupdate");

                em.close();
                emf.close();

                kosong();
                jTextFieldKodeMK.setEditable(true);
            }
        }

        tampil();

    }//GEN-LAST:event_jButtonUpdateDataActionPerformed

    private void jTextFieldSemesterAjarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSemesterAjarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSemesterAjarActionPerformed

    private void jButtonCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCetakActionPerformed
        try {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("TM_12PU");
            EntityManager em = emf.createEntityManager();

            if (em == null) {
                JOptionPane.showMessageDialog(null, "EntityManager gagal dibuat");
                return;
            }

            String query = "SELECT m FROM Matakuliah m";
            List<Matakuliah> matakuliahList = em.createQuery(query, Matakuliah.class).getResultList();

            if (matakuliahList.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
                return;
            }

            Map<String, Object> parameters = new HashMap<>();
            parameters.put("dataList", matakuliahList);

            String path = "src/KartuRencanaStudi.jasper";
            JasperReport report = (JasperReport) JRLoader.loadObjectFromFile(path);

            JasperPrint print = JasperFillManager.fillReport(report, parameters, new JRBeanCollectionDataSource(matakuliahList));

            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            viewer.setVisible(true);

            em.close();
            emf.close();

        } catch (JRException | PersistenceException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat mencetak laporan: " + e.getMessage());
        }
    }//GEN-LAST:event_jButtonCetakActionPerformed

    private void jButtonUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUploadActionPerformed

        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        int returnValue = jfc.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File filePilihan = jfc.getSelectedFile();
            System.out.println("yang dipilih : " + filePilihan.getAbsolutePath());

            EntityManagerFactory emf = Persistence.createEntityManagerFactory("TM_12PU");
            EntityManager em = emf.createEntityManager();

            try (BufferedReader br = new BufferedReader(new FileReader(filePilihan))) {
                String baris;
                String pemisah = ";";

                while ((baris = br.readLine()) != null) {
                    String[] data = baris.split(pemisah);
                    String kode = data[0];
                    String nama = data[1];
                    int sks = Integer.parseInt(data[2]);
                    int semester = Integer.parseInt(data[3]);

                    if (!kode.isEmpty() && !nama.isEmpty()) {
                        em.getTransaction().begin();

                        Matakuliah mk = new Matakuliah();
                        mk.setKodemk(Integer.parseInt(kode));
                        mk.setNamamk(nama);
                        mk.setSemesterajar(semester);
                        mk.setSks(sks);

                        em.persist(mk);
                        em.getTransaction().commit();

                        JOptionPane.showMessageDialog(null, "Sukses diinput");
                        tampil();
                    } else {
                        JOptionPane.showMessageDialog(null, "Gagal diinput: data kosong");
                    }
                }
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "File tidak ditemukan");
                ex.printStackTrace();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Gagal membaca file");
                ex.printStackTrace();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + ex.getMessage());
                ex.printStackTrace();
            } finally {
                em.close();
                emf.close();
            }
            tampil();
        }


    }//GEN-LAST:event_jButtonUploadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mahasiswa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCetak;
    private javax.swing.JButton jButtonHapusData;
    private javax.swing.JButton jButtonTambahData;
    private javax.swing.JButton jButtonUpdateData;
    private javax.swing.JButton jButtonUpload;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelKodeMK;
    private javax.swing.JLabel jLabelMataKuliah;
    private javax.swing.JLabel jLabelSKS;
    private javax.swing.JLabel jLabelSemesterAjar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableData;
    private javax.swing.JTextField jTextFieldKodeMK;
    private javax.swing.JTextField jTextFieldMataKuliah;
    private javax.swing.JTextField jTextFieldSKS;
    private javax.swing.JTextField jTextFieldSemesterAjar;
    // End of variables declaration//GEN-END:variables
}
